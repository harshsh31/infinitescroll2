{"version":3,"sources":["reducers/usersReducer.js","reducers/photosReducer.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js","store/store.js"],"names":["usersSlice","createSlice","name","initialState","usersList","username","password","error","userDetails","reducers","addUserDetails","state","action","payload","setErrorUser","userActions","actions","photosSlice","photosList","fetchPhotos","loading","page","prevY","addPhotos","setLoadingPhotos","setPage","setPrevY","photosActions","Login","lazy","Home","PrivateRoute","Component","component","authed","rest","render","props","console","log","to","pathname","from","location","withRouter","useSelector","user","fallback","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","photos","store","preloadedState","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunkMiddleware","devTools","process","initializeStore","app","ReactDOM","document","getElementById"],"mappings":"8JAWMA,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAXwB,CACxBC,UAAW,CACT,CAAEC,SAAU,YAAaC,SAAU,UACnC,CAAED,SAAU,MAAOC,SAAU,QAE/BC,OAAO,EACPC,YAAa,MAMbC,SAAU,CACRC,eADQ,SACOC,EAAOC,GACpBD,EAAMH,YAAN,eAAyBI,EAAOC,UAElCC,aAJQ,SAIKH,EAAOC,GAClBD,EAAMJ,MAAQK,EAAOC,YAKZb,MAAf,QAEO,IAAMe,EAAcf,EAAWgB,S,qFChBhCC,EAAchB,YAAY,CAC9BC,KAAM,SACNC,aAVyB,CACzBe,WAAY,GACZC,YAAa,8CACbC,SAAS,EACTC,KAAM,EACNC,MAAO,GAMPb,SAAU,CACRc,UADQ,SACEZ,EAAOC,GACfD,EAAMO,WAAN,sBAAuBN,EAAOC,SAA9B,YAA0CF,EAAMO,cAElDM,iBAJQ,SAISb,EAAOC,GACtBD,EAAMS,QAAUR,EAAOC,SAEzBY,QAPQ,SAOAd,EAAOC,GACbD,EAAMU,KAAOT,EAAOC,SAEtBa,SAVQ,SAUCf,EAAOC,GACdD,EAAMW,MAAQV,EAAOC,YAKZI,MAAf,QAEO,IAAMU,EAAgBV,EAAYD,S,uKC3BnCY,EAAQC,gBAAK,kBAAM,gCACnBC,EAAOD,gBAAK,kBAAM,sDAExB,SAASE,EAAT,GAAkE,IAA/BC,EAA8B,EAAzCC,UAAsBC,EAAmB,EAAnBA,OAAWC,EAAQ,iBAC/D,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAEP,OADAC,QAAQC,IAAIL,IACM,IAAXA,EACL,cAACF,EAAD,eAAeK,IAEf,cAAC,IAAD,CACEG,GAAI,CAAEC,SAAU,SAAU9B,MAAO,CAAE+B,KAAML,EAAMM,iBAO3D,IAgBeC,eAhBH,WACV,IACMV,EAAwB,MADVW,aAAY,SAAClC,GAAD,OAAWA,EAAMmC,KAAKtC,eAEtD,OACE,cAAC,WAAD,CAAUuC,SAAU,KAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,EAAChB,UAAWL,IACtC,cAAC,IAAD,CAAOqB,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUR,GAAIN,EAAS,QAAU,aAEnC,cAACH,EAAD,CAAcG,OAAQA,EAAQc,KAAK,QAAQf,UAAWH,YCtB/CoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCACQ,EAJK,CAClBC,WACAd,UCIF,IAAMe,ECLC,WAA+C,IAAtBC,EAAqB,uDAAJ,GAC/C,OAAOC,YAAe,CACpBC,UACAC,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOC,MAChCC,UAAUC,EACVR,mBDDUS,GACRC,EACJ,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAINY,IAASrC,OAAOoC,EAAKE,SAASC,eAAe,SAK7CzB,M","file":"static/js/main.054dd731.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialUsersState = {\r\n  usersList: [\r\n    { username: \"harshsh31\", password: \"foobar\" },\r\n    { username: \"foo\", password: \"bar\" },\r\n  ],\r\n  error: false,\r\n  userDetails: null,\r\n};\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: initialUsersState,\r\n  reducers: {\r\n    addUserDetails(state, action) {\r\n      state.userDetails = { ...action.payload };\r\n    },\r\n    setErrorUser(state, action) {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default usersSlice.reducer;\r\n\r\nexport const userActions = usersSlice.actions;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialPhotosState = {\r\n  photosList: [],\r\n  fetchPhotos: \"https://jsonplaceholder.typicode.com/photos\",\r\n  loading: false,\r\n  page: 0,\r\n  prevY: 0,\r\n};\r\n\r\nconst photosSlice = createSlice({\r\n  name: \"photos\",\r\n  initialState: initialPhotosState,\r\n  reducers: {\r\n    addPhotos(state, action) {\r\n      state.photosList = [...action.payload, ...state.photosList];\r\n    },\r\n    setLoadingPhotos(state, action) {\r\n      state.loading = action.payload;\r\n    },\r\n    setPage(state, action) {\r\n      state.page = action.payload;\r\n    },\r\n    setPrevY(state, action) {\r\n      state.prevY = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default photosSlice.reducer;\r\n\r\nexport const photosActions = photosSlice.actions;\r\n","import { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport React, { Suspense, lazy, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Login = lazy(() => import(\"./containers/Login/Login\"));\r\nconst Home = lazy(() => import(\"./containers/Home/Home\"));\r\n\r\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        console.log(authed);\r\n        return authed === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: \"/login\", state: { from: props.location } }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\nconst App = () => {\r\n  const userDetails = useSelector((state) => state.user.userDetails);\r\n  const authed = userDetails != null;\r\n  return (\r\n    <Suspense fallback={null}>\r\n      <Switch>\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Route exact path=\"/\">\r\n          <Redirect to={authed ? \"/home\" : \"/login\"} />\r\n        </Route>\r\n        <PrivateRoute authed={authed} path=\"/home\" component={Home} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import photos from \"./photosReducer\";\r\nimport user from \"./usersReducer\";\r\n\r\nconst rootReducer = {\r\n  photos,\r\n  user,\r\n};\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { initializeStore } from \"./store/store\";\r\n\r\nconst store = initializeStore();\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(app, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport reducer from \"../reducers/rootReducer\";\r\n\r\nexport function initializeStore(preloadedState = {}) {\r\n  return configureStore({\r\n    reducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware().concat(thunkMiddleware),\r\n    devTools: process.env.NODE_ENV !== \"production\",\r\n    preloadedState,\r\n  });\r\n}\r\n"],"sourceRoot":""}